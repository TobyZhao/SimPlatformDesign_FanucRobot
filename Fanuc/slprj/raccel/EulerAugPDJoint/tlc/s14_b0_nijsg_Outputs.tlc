%implements s14_b0_nijsg_Outputs "C"

%function Outputs(block, system) Output
%<SLibCGIRAccessLocalVar(29, 0)> %% rtb_Sum_h
%<SLibCGIRAccessLocalVar(30, 0)> %% rtb_Clock

%assign localVarDecl = ""
%openfile localVarDecl
real_T theta_total[24];
real_T kx[6];
real_T kx_0[6];
real_T kx_1[6];
real_T kx_2[6];
real_T kx_3[6];
real_T g[16];
real_T p[4];
real_T theta;
real_T p_0[4];
real_T theta_0;
real_T g_0[16];
real_T theta_1[2];
real_T theta_2[2];
real_T theta_3[2];
real_T b_q[4];
real_T b_q_0[4];
real_T q[4];
real_T b_pw[4];
int32_T exitg;
boolean_T guard;
real_T Jb[36];
real_T t;
real_T t_0;
real_T t_1;
real_T t_2;
real_T t_3;
real_T t_4;
real_T t_5;
real_T t_6;
real_T t_7;
real_T t_8;
real_T t_9;
real_T t_a;
real_T t_b;
real_T t_c;
real_T t_d;
real_T t_e;
real_T t_f;
real_T x[16];
real_T t_g;
real_T t_h;
real_T t_i;
real_T b_x[36];
real_T RT[9];
real_T wh[9];
real_T b[36];
real_T rtb_Output;
real_T rtb_End_Vy;
boolean_T b_x_0[2];
real_T g_1[4];
real_T kx_4[6];
real_T kx_5[6];
real_T tmp[16];
boolean_T b_x_1[2];
real_T p_1[4];
real_T tmp_0[16];
real_T tmp_1[16];
int32_T i;
real_T tmp_2[16];
int32_T t_j;
real_T RT_0[9];
real_T RT_1[9];
real_T q3_idx;
real_T pw_idx;
real_T pw_idx_0;
static real_T tmp_3[6] = { 0.0, 0.0, 0.0, -0.0, -0.0, -1.0 };

%closefile localVarDecl
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%assign tlcOutputsFcnOfS12B0 = OpaqueTLCBlockFcn("Outputs", 12, 0)
%assign tlcOutputsFcnOfS12B2 = OpaqueTLCBlockFcn("Outputs", 12, 2)
%assign tlcOutputsFcnOfS12B3 = OpaqueTLCBlockFcn("Outputs", 12, 3)
%assign tlcOutputsFcnOfS12B6 = OpaqueTLCBlockFcn("Outputs", 12, 6)
%assign tlcOutputsFcnOfS12B9 = OpaqueTLCBlockFcn("Outputs", 12, 9)
%assign tlcOutputsFcnOfS12B10 = OpaqueTLCBlockFcn("Outputs", 12, 10)
%assign tlcOutputsFcnOfS12B11 = OpaqueTLCBlockFcn("Outputs", 12, 11)
%assign tlcOutputsFcnOfS12B12 = OpaqueTLCBlockFcn("Outputs", 12, 12)
%assign tlcOutputsFcnOfS12B13 = OpaqueTLCBlockFcn("Outputs", 12, 13)
%assign tlcOutputsFcnOfS12B14 = OpaqueTLCBlockFcn("Outputs", 12, 14)
%assign tlcOutputsFcnOfS12B17 = OpaqueTLCBlockFcn("Outputs", 12, 17)
%assign tlcOutputsFcnOfS12B18 = OpaqueTLCBlockFcn("Outputs", 12, 18)
%assign tlcOutputsFcnOfS12B19 = OpaqueTLCBlockFcn("Outputs", 12, 19)
%assign tlcOutputsFcnOfS12B20 = OpaqueTLCBlockFcn("Outputs", 12, 20)
%assign tlcOutputsFcnOfS12B22 = OpaqueTLCBlockFcn("Outputs", 12, 22)
%assign tlcOutputsFcnOfS12B23 = OpaqueTLCBlockFcn("Outputs", 12, 23)
%assign tlcOutputsFcnOfS12B26 = OpaqueTLCBlockFcn("Outputs", 12, 26)
%assign tlcOutputsFcnOfS12B29 = OpaqueTLCBlockFcn("Outputs", 12, 29)
%assign tlcOutputsFcnOfS12B31 = OpaqueTLCBlockFcn("Outputs", 12, 31)
%assign tlcOutputsFcnOfS12B34 = OpaqueTLCBlockFcn("Outputs", 12, 34)
%assign tlcOutputsFcnOfS12B35 = OpaqueTLCBlockFcn("Outputs", 12, 35)
%assign tlcOutputsFcnOfS12B36 = OpaqueTLCBlockFcn("Outputs", 12, 36)
%assign tlcOutputsFcnOfS12B38 = OpaqueTLCBlockFcn("Outputs", 12, 38)
%assign tlcOutputsFcnOfS12B39 = OpaqueTLCBlockFcn("Outputs", 12, 39)
%assign tlcOutputsFcnOfS12B40 = OpaqueTLCBlockFcn("Outputs", 12, 40)
%assign tlcOutputsFcnOfS12B41 = OpaqueTLCBlockFcn("Outputs", 12, 41)
%assign tlcOutputsFcnOfS12B43 = OpaqueTLCBlockFcn("Outputs", 12, 43)
%assign tlcOutputsFcnOfS12B44 = OpaqueTLCBlockFcn("Outputs", 12, 44)
%assign tlcOutputsFcnOfS12B45 = OpaqueTLCBlockFcn("Outputs", 12, 45)
%assign tlcOutputsFcnOfS12B46 = OpaqueTLCBlockFcn("Outputs", 12, 46)
%assign tlcOutputsFcnOfS12B47 = OpaqueTLCBlockFcn("Outputs", 12, 47)
%assign tlcOutputsFcnOfS12B48 = OpaqueTLCBlockFcn("Outputs", 12, 48)
%assign tlcOutputsFcnOfS12B49 = OpaqueTLCBlockFcn("Outputs", 12, 49)
%assign tlcOutputsFcnOfS12B50 = OpaqueTLCBlockFcn("Outputs", 12, 50)
%assign tlcOutputsFcnOfS12B51 = OpaqueTLCBlockFcn("Outputs", 12, 51)
%assign tlcOutputsFcnOfS12B52 = OpaqueTLCBlockFcn("Outputs", 12, 52)
%assign tlcOutputsFcnOfS12B53 = OpaqueTLCBlockFcn("Outputs", 12, 53)
%assign tlcOutputsFcnOfS12B54 = OpaqueTLCBlockFcn("Outputs", 12, 54)
%assign tlcOutputsFcnOfS12B55 = OpaqueTLCBlockFcn("Outputs", 12, 55)
%assign tlcOutputsFcnOfS12B56 = OpaqueTLCBlockFcn("Outputs", 12, 56)
%assign tlcOutputsFcnOfS12B57 = OpaqueTLCBlockFcn("Outputs", 12, 57)
%assign tlcOutputsFcnOfS12B58 = OpaqueTLCBlockFcn("Outputs", 12, 58)
%assign tlcOutputsFcnOfS12B59 = OpaqueTLCBlockFcn("Outputs", 12, 59)
%assign tlcOutputsFcnOfS12B61 = OpaqueTLCBlockFcn("Outputs", 12, 61)
%assign tlcOutputsFcnOfS12B62 = OpaqueTLCBlockFcn("Outputs", 12, 62)
%assign tlcOutputsFcnOfS12B63 = OpaqueTLCBlockFcn("Outputs", 12, 63)
%assign tlcOutputsFcnOfS12B64 = OpaqueTLCBlockFcn("Outputs", 12, 64)
%assign tlcOutputsFcnOfS12B65 = OpaqueTLCBlockFcn("Outputs", 12, 65)
%assign tlcOutputsFcnOfS12B66 = OpaqueTLCBlockFcn("Outputs", 12, 66)
%assign tlcOutputsFcnOfS12B67 = OpaqueTLCBlockFcn("Outputs", 12, 67)
%assign tlcOutputsFcnOfS12B68 = OpaqueTLCBlockFcn("Outputs", 12, 68)
%assign tlcOutputsFcnOfS12B69 = OpaqueTLCBlockFcn("Outputs", 12, 69)
%assign tlcOutputsFcnOfS12B71 = OpaqueTLCBlockFcn("Outputs", 12, 71)
%assign tlcOutputsFcnOfS12B72 = OpaqueTLCBlockFcn("Outputs", 12, 72)
%assign tlcOutputsFcnOfS12B73 = OpaqueTLCBlockFcn("Outputs", 12, 73)
%assign tlcOutputsFcnOfS12B75 = OpaqueTLCBlockFcn("Outputs", 12, 75)
%assign tlcOutputsFcnOfS12B76 = OpaqueTLCBlockFcn("Outputs", 12, 76)
%assign tlcOutputsFcnOfS12B77 = OpaqueTLCBlockFcn("Outputs", 12, 77)
%assign tlcOutputsFcnOfS12B91 = OpaqueTLCBlockFcn("Outputs", 12, 91)
%assign tlcOutputsFcnOfS12B115 = OpaqueTLCBlockFcn("Outputs", 12, 115)
%assign tlcOutputsFcnOfS12B116 = OpaqueTLCBlockFcn("Outputs", 12, 116)
%assign tlcOutputsFcnOfS12B119 = OpaqueTLCBlockFcn("Outputs", 12, 119)
%assign tlcOutputsFcnOfS12B120 = OpaqueTLCBlockFcn("Outputs", 12, 120)
%assign tlcOutputsFcnOfS12B121 = OpaqueTLCBlockFcn("Outputs", 12, 121)
%assign tlcOutputsFcnOfS12B122 = OpaqueTLCBlockFcn("Outputs", 12, 122)
%assign tlcOutputsFcnOfS12B123 = OpaqueTLCBlockFcn("Outputs", 12, 123)
%assign tlcOutputsFcnOfS12B124 = OpaqueTLCBlockFcn("Outputs", 12, 124)
if(%<LibIsSampleHit(1)>) {

%<SLibCG_SetBOV(0, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(25, 0, 12, 1, "", -1, "", 0)>")>\
}

%<SLibCG_SetBOV(1, 0, 12, 1, "", -1, "", 0, "muDoubleScalarSin(%<SLibCG_SE(SLibCGIR_PV(28, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(LibGetTaskTime(0))> + %<SLibCG_SE(SLibCGIR_PV(29, 0, 12, 1, "", -1, "", 0))>) * %<SLibCG_SE(SLibCGIR_PV(26, 0, 12, 1, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(27, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B0>\

rtb_End_Vy = muDoubleScalarSin(%<SLibCG_SE(SLibCGIR_PV(35, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(LibGetTaskTime(0))> + %<SLibCG_SE(SLibCGIR_PV(36, 0, 12, 1, "", -1, "", 0))>) * %<SLibCG_SE(SLibCGIR_PV(33, 0, 12, 1, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(34, 0, 12, 1, "", -1, "", 0))>;

%<tlcOutputsFcnOfS12B2>\
if(%<LibIsSampleHit(1)>) {

if(%<LibIsMajorTimeStep()>) {
%<SLibCG_SetDWV(58, 0, 12, 1, "", -1, "", 0, "(%<SLibCG_SE(LibGetTaskTime(1))> >= %<SLibCG_SE(SLibCGIR_PV(39, 0, 12, 1, "", -1, "", 0))>)")>\
}
if(%<SLibCG_SE(SLibCG_DWV(58, 0, 12, 1, "", -1, "", 0))> == 1) {
%<SLibCG_SetBOV(3, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(41, 0, 12, 1, "", -1, "", 0)>")>\
} else {
%<SLibCG_SetBOV(3, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(40, 0, 12, 1, "", -1, "", 0)>")>\
}
}

%<tlcOutputsFcnOfS12B3>\

rtb_Output = (rtb_Clock - %<SLibCG_SE(SLibCGIR_PV(42, 0, 12, 1, "", -1, "", 0))>) * %<SLibCG_SE(SLibCG_BOV(3, 0, 12, 1, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(43, 0, 12, 1, "", -1, "", 0))>;
if(%<LibIsSampleHit(1)>) {

if(%<LibIsMajorTimeStep()>) {
%<SLibCG_SetDWV(59, 0, 12, 1, "", -1, "", 0, "(%<SLibCG_SE(LibGetTaskTime(1))> >= %<SLibCG_SE(SLibCGIR_PV(44, 0, 12, 1, "", -1, "", 0))>)")>\
}
if(%<SLibCG_SE(SLibCG_DWV(59, 0, 12, 1, "", -1, "", 0))> == 1) {
%<SLibCG_SetBOV(4, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(46, 0, 12, 1, "", -1, "", 0)>")>\
} else {
%<SLibCG_SetBOV(4, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(45, 0, 12, 1, "", -1, "", 0)>")>\
}
}

%<tlcOutputsFcnOfS12B6>\

%<SLibCG_SetBOV(5, 0, 12, 1, "", -1, "", 0, "((((rtb_Clock - %<SLibCG_SE(SLibCGIR_PV(47, 0, 12, 1, "", -1, "", 0))>) * %<SLibCG_SE(SLibCG_BOV(4, 0, 12, 1, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(48, 0, 12, 1, "", -1, "", 0))>) + rtb_Output) + rtb_Sum_h) * %<SLibCG_SE(SLibCGIR_PV(49, 0, 12, 1, "", -1, "", 0))>")>\

%<SLibCG_SetBOV(6, 0, 12, 1, "", -1, "", 0, "rtb_End_Vy + %<SLibCG_SE(SLibCGIR_PV(32, 0, 12, 1, "", -1, "", 0))>")>\
if(%<LibIsSampleHit(1)>) {

%<SLibCG_SetBOV(7, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(50, 0, 12, 1, "", -1, "", 0)>")>\

%<SLibCG_SetBOV(8, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(51, 0, 12, 1, "", -1, "", 0)>")>\

%<SLibCG_SetBOV(9, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(52, 0, 12, 1, "", -1, "", 0)>")>\
}

%<tlcOutputsFcnOfS12B9>\

%<tlcOutputsFcnOfS12B10>\

%<tlcOutputsFcnOfS12B11>\

%<tlcOutputsFcnOfS12B12>\

%<tlcOutputsFcnOfS12B13>\

%<tlcOutputsFcnOfS12B14>\

%<SLibCGIRGenReusableSysCallNoCGIRArgs(4, 0, 3, 0, 3, 12)>\

%<SLibCGIRGenReusableSysCallNoCGIRArgs(5, 0, 3, 0, 3, 12)>\

%<tlcOutputsFcnOfS12B17>\

%<SLibCG_SetBOV(19, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(60, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 16))>")>\

%<SLibCG_SetBOV(20, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(61, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 17))>")>\

%<tlcOutputsFcnOfS12B18>\

%<tlcOutputsFcnOfS12B19>\

%<tlcOutputsFcnOfS12B20>\

%<SLibCG_SetBOV(85, 0, 12, 3, "", -1, "", 0, "%<SLibCG_BOV(21, 0, 12, 1, "", -1, "", 0)>")>\
%<SLibCG_SetBOV(85, 0, 12, 3, "", -1, "", 1, "%<SLibCG_BOV(22, 0, 12, 1, "", -1, "", 0)>")>\
%<SLibCG_SetBOV(85, 0, 12, 3, "", -1, "", 2, "%<SLibCG_BOV(23, 0, 12, 1, "", -1, "", 0)>")>\

memset((void *)&theta_total[0], 0, 24U * sizeof(real_T));
/*  at most 4 pairs of solution */
t_1 = 0.0;
kx[0] = -%<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 0))>;
kx[1] = -(0.0 * %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 1))> - 0.0 * %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 0))>);
kx[2] = -(0.0 - %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 1))>);
q3_idx = %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 2))>;
kx_0[0] = -q3_idx;
kx_0[1] = -(0.0 * %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 1))> - 0.0 * q3_idx);
kx_0[2] = -(0.0 - %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 1))>);
pw_idx = %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 1))> + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 4))>;
pw_idx_0 = (%<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 2))>) + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 3))>;
kx_1[0] = -(0.0 * pw_idx_0);
kx_1[1] = -(0.0 * pw_idx - pw_idx_0);
kx_1[2] = -(0.0 - 0.0 * pw_idx);
kx_2[0] = -pw_idx_0;
kx_2[1] = -(0.0 * pw_idx - 0.0 * pw_idx_0);
kx_2[2] = -(0.0 - pw_idx);
kx_3[0] = -(0.0 * pw_idx_0);
kx_3[1] = -(0.0 * pw_idx - pw_idx_0);
kx_3[2] = -(0.0 - 0.0 * pw_idx);
kx[3] = 0.0;
kx_0[3] = 0.0;
kx_1[3] = 1.0;
kx_2[3] = 0.0;
kx_3[3] = 1.0;
b_q[0] = %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 1))>;
b_q_0[0] = %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 1))>;
b_pw[0] = pw_idx;
kx[4] = 1.0;
kx_0[4] = 1.0;
kx_1[4] = 0.0;
kx_2[4] = 1.0;
kx_3[4] = 0.0;
b_q[1] = 0.0;
b_q_0[1] = 0.0;
b_pw[1] = 0.0;
kx[5] = 0.0;
kx_0[5] = 0.0;
kx_1[5] = 0.0;
kx_2[5] = 0.0;
kx_3[5] = 0.0;
b_q[2] = %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 0))>;
b_q_0[2] = q3_idx;
b_pw[2] = pw_idx_0;
b_q[3] = 1.0;
b_q_0[3] = 1.0;
q[0] = (%<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 1))> + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 4))>) + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 5))>;
q[1] = 0.0;
q[2] = (%<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 2))>) + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 3))>;
q[3] = 1.0;
b_pw[3] = 1.0;
for(i = 0; i < 3; i++) {
tmp_0[i << 2] = %<SLibCG_SE(SLibCGIR_PV(23, 0, 12, 9, "", -1, "3 * i", 0))>;
tmp_0[1 + (i << 2)] = %<SLibCG_SE(SLibCGIR_PV(23, 0, 12, 9, "", -1, "3 * i + 1", 0))>;
tmp_0[2 + (i << 2)] = %<SLibCG_SE(SLibCGIR_PV(23, 0, 12, 9, "", -1, "3 * i + 2", 0))>;
}
tmp_0[12] = %<SLibCG_SE(SLibCG_BOV(85, 0, 12, 3, "", -1, "", 0))>;
tmp_0[13] = %<SLibCG_SE(SLibCG_BOV(85, 0, 12, 3, "", -1, "", 1))>;
tmp_0[14] = %<SLibCG_SE(SLibCG_BOV(85, 0, 12, 3, "", -1, "", 2))>;
tmp_0[3] = 0.0;
tmp_0[7] = 0.0;
tmp_0[11] = 0.0;
tmp_0[15] = 1.0;
tmp_1[0] = 1.0;
tmp_1[4] = 0.0;
tmp_1[8] = 0.0;
tmp_1[12] = ((%<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 1))> + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 4))>) + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 5))>) + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 6))>;
tmp_1[1] = 0.0;
tmp_1[5] = 1.0;
tmp_1[9] = 0.0;
tmp_1[13] = %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 7))>;
tmp_1[2] = 0.0;
tmp_1[6] = 0.0;
tmp_1[10] = 1.0;
tmp_1[14] = ((%<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 2))>) + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 3))>) + %<SLibCG_SE(SLibCGIR_PV(22, 0, 12, 9, "", -1, "", 8))>;
tmp_1[3] = 0.0;
tmp_1[7] = 0.0;
tmp_1[11] = 0.0;
tmp_1[15] = 1.0;
%<SLibCGCallSubFcn(block, 3, 11, 2)>;
/*  gd*inv(gst0) */
/*  select pw = [L2+L5;0;L1+L3+L4] */
for(i = 0; i < 4; i++) {
q3_idx = g[i + 12] + (g[i + 8] * b_pw[2] + (g[i + 4] * 0.0 + g[i] * b_pw[0]));
p[i] = q3_idx;
}
theta = muDoubleScalarAtan2(p[1], p[0]);
/*  only one solution */
rtb_End_Vy = theta / 3.1415926535897931 * 180.0;
if((rtb_End_Vy >= -165.0) && (rtb_End_Vy <= 165.0)) {
/*  select q2 = [L2;0;L1], subproblem3 */
%<SLibCGCallSubFcn(block, 3, 11, 13)>;
for(i = 0; i < 4; i++) {
q3_idx = tmp_0[i + 12] * p[3] + (tmp_0[i + 8] * p[2] + (tmp_0[i + 4] * p[1] + tmp_0[i] * p[0]));
p_1[i] = q3_idx - b_q[i];
p_0[i] = q3_idx;
}
%<SLibCGCallSubFcn(block, 3, 11, 4)>;
/*  at most 2 solutions */
q3_idx = theta_1[0] / 3.1415926535897931 * 180.0;
b_x_1[0] = (((q3_idx >= -210.0) && (q3_idx <= 90.0)) == 1);
q3_idx = theta_1[1] / 3.1415926535897931 * 180.0;
b_x_1[1] = (((q3_idx >= -210.0) && (q3_idx <= 90.0)) == 1);
if(%<SLibCGCallSubFcn(block, 3, 11, 0)>) {
/*   */
t_0 = 1.0;
do {
exitg = 0;
if(t_0 <= t) {
rtb_End_Vy = theta_1[(int32_T)t_0 - 1] / 3.1415926535897931 * 180.0;
guard = FALSE;
if(((rtb_End_Vy >= -210.0) && (rtb_End_Vy <= 90.0)) == 1) {
%<SLibCGCallSubFcn(block, 3, 11, 12)>;
for(i = 0; i < 4; i++) {
pw_idx = tmp_0[i + 12] + (tmp_0[i + 8] * b_pw[2] + (tmp_0[i + 4] * 0.0 + tmp_0[i] * b_pw[0]));
b_q[i] = pw_idx;
}
theta_0 = %<SLibCGCallSubFcn(block, 3, 11, 3)>;
/*  only one solution */
rtb_End_Vy = theta_0 / 3.1415926535897931 * 180.0;
if(((rtb_End_Vy >= -150.0) && (rtb_End_Vy <= 60.0)) == 0) {
/* disp('Cannot find appropriate theta_2'); */
exitg = 1;
} else {
for(i = 0; i < 6; i++) {
kx_4[i] = -kx_0[i];
kx_5[i] = -kx[i];
}
%<SLibCGCallSubFcn(block, 3, 11, 9)>;
%<SLibCGCallSubFcn(block, 3, 11, 10)>;
%<SLibCGCallSubFcn(block, 3, 11, 11)>;
for(i = 0; i < 4; i++) {
for(t_j = 0; t_j < 4; t_j++) {
tmp_2[i + (t_j << 2)] = 0.0;
tmp_2[i + (t_j << 2)] = tmp_2[(t_j << 2) + i] + tmp_1[t_j << 2] * tmp_0[i];
tmp_2[i + (t_j << 2)] = tmp_1[(t_j << 2) + 1] * tmp_0[i + 4] + tmp_2[(t_j << 2) + i];
tmp_2[i + (t_j << 2)] = tmp_1[(t_j << 2) + 2] * tmp_0[i + 8] + tmp_2[(t_j << 2) + i];
tmp_2[i + (t_j << 2)] = tmp_1[(t_j << 2) + 3] * tmp_0[i + 12] + tmp_2[(t_j << 2) + i];
}
}
for(i = 0; i < 4; i++) {
for(t_j = 0; t_j < 4; t_j++) {
tmp_0[i + (t_j << 2)] = 0.0;
tmp_0[i + (t_j << 2)] = tmp_0[(t_j << 2) + i] + tmp[t_j << 2] * tmp_2[i];
tmp_0[i + (t_j << 2)] = tmp[(t_j << 2) + 1] * tmp_2[i + 4] + tmp_0[(t_j << 2) + i];
tmp_0[i + (t_j << 2)] = tmp[(t_j << 2) + 2] * tmp_2[i + 8] + tmp_0[(t_j << 2) + i];
tmp_0[i + (t_j << 2)] = tmp[(t_j << 2) + 3] * tmp_2[i + 12] + tmp_0[(t_j << 2) + i];
}
}
for(i = 0; i < 4; i++) {
for(t_j = 0; t_j < 4; t_j++) {
g_0[i + (t_j << 2)] = 0.0;
g_0[i + (t_j << 2)] = g_0[(t_j << 2) + i] + g[t_j << 2] * tmp_0[i];
g_0[i + (t_j << 2)] = g[(t_j << 2) + 1] * tmp_0[i + 4] + g_0[(t_j << 2) + i];
g_0[i + (t_j << 2)] = g[(t_j << 2) + 2] * tmp_0[i + 8] + g_0[(t_j << 2) + i];
g_0[i + (t_j << 2)] = g[(t_j << 2) + 3] * tmp_0[i + 12] + g_0[(t_j << 2) + i];
}
}
/* select q7 */
for(i = 0; i < 4; i++) {
q3_idx = g_0[i + 12] + (g_0[i + 8] * q[2] + (g_0[i + 4] * 0.0 + g_0[i] * q[0]));
g_1[i] = q3_idx;
}
%<SLibCGCallSubFcn(block, 3, 11, 5)>;
/*  at most 2 pairs of solution */
q3_idx = theta_3[0] / 3.1415926535897931 * 180.0;
b_x_0[0] = (((q3_idx >= -140.0) && (q3_idx <= 140.0)) == 1);
q3_idx = theta_3[1] / 3.1415926535897931 * 180.0;
b_x_0[1] = (((q3_idx >= -140.0) && (q3_idx <= 140.0)) == 1);
if((int32_T)%<SLibCGCallSubFcn(block, 3, 11, 1)> == 0) {
/* disp('Cannot find appropriate theta_5'); */
exitg = 1;
} else {
for(rtb_Output = 1.0; rtb_Output <= rtb_End_Vy; rtb_Output++) {
q3_idx = theta_3[(int32_T)rtb_Output - 1] / 3.1415926535897931 * 180.0;
if(((q3_idx >= -140.0) && (q3_idx <= 140.0)) == 1) {
/* selcet q3 */
/*  only one solution */
t_1++;
for(i = 0; i < 6; i++) {
kx_4[i] = -kx_2[i];
kx_5[i] = -kx_1[i];
}
%<SLibCGCallSubFcn(block, 3, 11, 7)>;
%<SLibCGCallSubFcn(block, 3, 11, 8)>;
for(i = 0; i < 4; i++) {
for(t_j = 0; t_j < 4; t_j++) {
tmp[i + (t_j << 2)] = 0.0;
tmp[i + (t_j << 2)] = tmp[(t_j << 2) + i] + tmp_1[t_j << 2] * tmp_0[i];
tmp[i + (t_j << 2)] = tmp_1[(t_j << 2) + 1] * tmp_0[i + 4] + tmp[(t_j << 2) + i];
tmp[i + (t_j << 2)] = tmp_1[(t_j << 2) + 2] * tmp_0[i + 8] + tmp[(t_j << 2) + i];
tmp[i + (t_j << 2)] = tmp_1[(t_j << 2) + 3] * tmp_0[i + 12] + tmp[(t_j << 2) + i];
}
}
for(i = 0; i < 4; i++) {
for(t_j = 0; t_j < 4; t_j++) {
tmp_0[i + (t_j << 2)] = 0.0;
tmp_0[i + (t_j << 2)] = tmp_0[(t_j << 2) + i] + g_0[t_j << 2] * tmp[i];
tmp_0[i + (t_j << 2)] = g_0[(t_j << 2) + 1] * tmp[i + 4] + tmp_0[(t_j << 2) + i];
tmp_0[i + (t_j << 2)] = g_0[(t_j << 2) + 2] * tmp[i + 8] + tmp_0[(t_j << 2) + i];
tmp_0[i + (t_j << 2)] = g_0[(t_j << 2) + 3] * tmp[i + 12] + tmp_0[(t_j << 2) + i];
}
}
for(i = 0; i < 4; i++) {
pw_idx = tmp_0[i + 12] + (tmp_0[i + 8] * b_q_0[2] + (tmp_0[i + 4] * 0.0 + tmp_0[i] * b_q_0[0]));
b_q[i] = pw_idx;
}
t_j = (int32_T)t_1 - 1;
kx_5[0] = theta;
kx_5[1] = theta_0;
kx_5[2] = theta_1[(int32_T)t_0 - 1];
kx_5[3] = theta_2[(int32_T)rtb_Output - 1];
kx_5[4] = theta_3[(int32_T)rtb_Output - 1];
kx_5[5] = %<SLibCGCallSubFcn(block, 3, 11, 14)>;
for(i = 0; i < 6; i++) {
theta_total[i + 6 * t_j] = kx_5[i];
}
}
}
guard = TRUE;
}
}
} else {
guard = TRUE;
}
if(guard) {
t_0++;
}
} else {
/*  check range */
/* disp(theta*180/pi);   */
exitg = 1;
}
} while((uint32_T)exitg == 0U);
} else {
/* disp('Cannot find appropriate theta_3'); */
}
} else {
/* disp('Cannot find appropriate theta_1'); */
}
for(i = 0; i < 6; i++) {
%<SLibCG_SetBOV(86, 0, 12, 6, "", -1, "i", 0, "theta_total[6 + i]")>\
}

%<SLibCG_SetBOV(24, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(65, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 14))>")>\

%<SLibCG_SetBOV(25, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(66, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 15))>")>\

%<SLibCG_SetBOV(26, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(67, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 12))>")>\

%<SLibCG_SetBOV(27, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(68, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 13))>")>\

%<SLibCG_SetBOV(28, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(69, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 10))>")>\

%<SLibCG_SetBOV(29, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(70, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 11))>")>\

%<SLibCG_SetBOV(30, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(71, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 8))>")>\

%<SLibCG_SetBOV(31, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(72, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 9))>")>\

%<SLibCG_SetBOV(32, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(73, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 6))>")>\

%<SLibCG_SetBOV(33, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(74, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 7))>")>\
if(%<LibIsSampleHit(1)>) {

%<SLibCG_SetBOV(34, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(75, 0, 12, 1, "", -1, "", 0)>")>\
}

%<tlcOutputsFcnOfS12B22>\
if(%<LibIsSampleHit(1)>) {

if(%<LibIsMajorTimeStep()>) {
%<SLibCG_SetDWV(60, 0, 12, 1, "", -1, "", 0, "(%<SLibCG_SE(LibGetTaskTime(1))> >= %<SLibCG_SE(SLibCGIR_PV(78, 0, 12, 1, "", -1, "", 0))>)")>\
}
if(%<SLibCG_SE(SLibCG_DWV(60, 0, 12, 1, "", -1, "", 0))> == 1) {
%<SLibCG_SetBOV(35, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(80, 0, 12, 1, "", -1, "", 0)>")>\
} else {
%<SLibCG_SetBOV(35, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(79, 0, 12, 1, "", -1, "", 0)>")>\
}
}

%<tlcOutputsFcnOfS12B23>\

rtb_End_Vy = (rtb_Sum_h - %<SLibCG_SE(SLibCGIR_PV(81, 0, 12, 1, "", -1, "", 0))>) * %<SLibCG_SE(SLibCG_BOV(35, 0, 12, 1, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(82, 0, 12, 1, "", -1, "", 0))>;
if(%<LibIsSampleHit(1)>) {

if(%<LibIsMajorTimeStep()>) {
%<SLibCG_SetDWV(61, 0, 12, 1, "", -1, "", 0, "(%<SLibCG_SE(LibGetTaskTime(1))> >= %<SLibCG_SE(SLibCGIR_PV(83, 0, 12, 1, "", -1, "", 0))>)")>\
}
if(%<SLibCG_SE(SLibCG_DWV(61, 0, 12, 1, "", -1, "", 0))> == 1) {
%<SLibCG_SetBOV(36, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(85, 0, 12, 1, "", -1, "", 0)>")>\
} else {
%<SLibCG_SetBOV(36, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(84, 0, 12, 1, "", -1, "", 0)>")>\
}
}

%<tlcOutputsFcnOfS12B26>\

%<SLibCG_SetBOV(37, 0, 12, 1, "", -1, "", 0, "((((rtb_Sum_h - %<SLibCG_SE(SLibCGIR_PV(86, 0, 12, 1, "", -1, "", 0))>) * %<SLibCG_SE(SLibCG_BOV(36, 0, 12, 1, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(87, 0, 12, 1, "", -1, "", 0))>) + rtb_End_Vy) + rtb_Clock) * %<SLibCG_SE(SLibCGIR_PV(88, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B29>\

%<SLibCG_SetBOV(83, 0, 12, 3, "", -1, "", 0, "%<SLibCG_BOV(34, 0, 12, 1, "", -1, "", 0)>")>\
%<SLibCG_SetBOV(83, 0, 12, 3, "", -1, "", 1, "%<SLibCG_BOV(37, 0, 12, 1, "", -1, "", 0)>")>\
%<SLibCG_SetBOV(83, 0, 12, 3, "", -1, "", 2, "%<SLibCG_BOV(38, 0, 12, 1, "", -1, "", 0)>")>\

/* FWD_KIN */
/*     GST = FWD_KIN(IN1,IN2) */
/*     This function was generated by the Symbolic Math Toolbox version 5.5. */
/*     24-Apr-2013 12:49:18 */
t = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 0)>);
t_0 = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 1)>);
t_1 = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 2)>);
theta = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 2)>);
pw_idx = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 1)>);
pw_idx_0 = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 3)>);
t_2 = t * t_0 * t_1 + t * theta * pw_idx;
t_3 = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 3)>);
t_4 = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 0)>);
t_5 = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 4)>);
t_6 = t * t_0 * theta - t * t_1 * pw_idx;
t_7 = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 4)>);
t_8 = t_2 * t_3 + t_4 * pw_idx_0;
t_9 = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 5)>);
t_a = t_3 * t_4;
t_b = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 5)>);
t_c = t_5 * t_6 + t_7 * t_8;
t_d = t_4 * t_0 * theta - t_4 * t_1 * pw_idx;
rtb_End_Vy = t_4 * t_0 * t_1 + t_4 * theta * pw_idx;
t_e = t_3 * rtb_End_Vy - t * pw_idx_0;
t_f = t_5 * t_d + t_7 * t_e;
rtb_End_Vy = rtb_End_Vy * pw_idx_0 + t_3 * t;
rtb_Output = t_0 * t_1 + theta * pw_idx;
q3_idx = t_0 * theta - t_1 * pw_idx;
theta_0 = t_5 * rtb_Output - t_3 * t_7 * q3_idx;
x[0] = t_6 * t_7 - t_5 * t_8;
x[1] = t_7 * t_d - t_5 * t_e;
x[2] = (-t_7) * rtb_Output - t_3 * t_5 * q3_idx;
x[3] = 0.0;
x[4] = t_9 * t_c - (t_a - t_2 * pw_idx_0) * t_b;
x[5] = t_9 * t_f + t_b * rtb_End_Vy;
x[6] = t_b * q3_idx * pw_idx_0 + (-t_9) * theta_0;
x[7] = 0.0;
x[8] = (t_a - t_2 * pw_idx_0) * t_9 + t_b * t_c;
x[9] = t_b * t_f - t_9 * rtb_End_Vy;
x[10] = (-t_b) * theta_0 - t_9 * q3_idx * pw_idx_0;
x[11] = 0.0;
x[12] = ((((((((((((((((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * t * pw_idx + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 1))> * t) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_3 * t_4 * t_b) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * t * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_3 * t_4 * t_9) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * t * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_4 * t_5 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_4 * t_5 * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * t * theta * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * t * t_1 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_7 * t * t_0 * theta) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_7 * t * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_7 * t * t_1 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_4 * t_7 * t_9 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_7 * t * t_1 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_4 * t_7 * t_b * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_3 * t_5 * t * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_3 * t_5 * t * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_5 * t * t_9 * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_3 * t_5 * t * theta * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_3 * t_5 * t * theta * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_5 * t * t_b * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_5 * t * t_9 * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_5 * t * t_b * t_1 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t * t_b * t_0 * t_1 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t * t_9 * t_0 * t_1 * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t * t_b * theta * pw_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t * t_9 * theta * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_3 * t_7 * t * t_9 * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_3 * t_7 * t * t_b * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_3 * t_7 * t * t_9 * theta * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_3 * t_7 * t * t_b * theta * pw_idx;
x[13] = ((((((((((((((((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * t_4 * pw_idx + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 1))> * t_4) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * t_4 * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_3 * t * t_b) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * t_4 * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_3 * t * t_9) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * t_4 * theta * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * t_4 * t_1 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_5 * t * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_5 * t * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_4 * t_7 * t_0 * theta) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_4 * t_7 * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_4 * t_7 * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_4 * t_7 * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_7 * t * t_9 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_7 * t * t_b * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_3 * t_4 * t_5 * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_3 * t_4 * t_5 * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_4 * t_5 * t_9 * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_3 * t_4 * t_5 * theta * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_3 * t_4 * t_5 * theta * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_4 * t_5 * t_b * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_4 * t_5 * t_9 * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_4 * t_5 * t_b * t_1 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_4 * t_b * t_0 * t_1 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_4 * t_9 * t_0 * t_1 * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_4 * t_b * theta * pw_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_4 * t_9 * theta * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_3 * t_4 * t_7 * t_9 * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_3 * t_4 * t_7 * t_b * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_3 * t_4 * t_7 * t_9 * theta * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_3 * t_4 * t_7 * t_b * theta * pw_idx;
x[14] = ((((((((((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * t_0 + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 0))>) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * theta * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_7 * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_7 * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_7 * theta * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_7 * theta * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_3 * t_5 * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_3 * t_5 * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_5 * t_9 * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_3 * t_5 * t_1 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_3 * t_5 * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_5 * t_b * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_5 * t_9 * theta * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_5 * t_b * theta * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_b * t_0 * theta * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_9 * t_0 * theta * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_b * t_1 * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_9 * t_1 * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_3 * t_7 * t_9 * t_0 * theta) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_3 * t_7 * t_b * t_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_3 * t_7 * t_9 * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_3 * t_7 * t_b * t_1 * pw_idx;
x[15] = 1.0;
memcpy((void *)&g[0], (void *)&x[0], sizeof(real_T) << 4U);
/* BODY_JACOBIAN */
/*     BODY_JACOBIAN = BODY_JACOBIAN(IN1,IN2) */
/*     This function was generated by the Symbolic Math Toolbox version 5.5. */
/*     24-Apr-2013 20:43:25 */
rtb_End_Vy = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 3)>);
rtb_Output = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 4)>);
theta_0 = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 1)>);
theta = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 2)>);
q3_idx = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 5)>);
t = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 1)>);
t_0 = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 2)>);
t_1 = muDoubleScalarSin(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 5)>);
pw_idx = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 3)>);
pw_idx_0 = muDoubleScalarCos(%<SLibCG_BOV(86, 0, 12, 6, "", -1, "", 4)>);
t_2 = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * pw_idx_0;
t_3 = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_Output * pw_idx;
t_4 = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_1 * pw_idx;
t_5 = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * q3_idx * pw_idx;
t_6 = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * rtb_End_Vy * q3_idx * pw_idx_0;
t_7 = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * rtb_Output * t_1;
t_8 = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * rtb_Output * q3_idx;
t_9 = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_End_Vy * t_1;
t_a = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * rtb_End_Vy * rtb_Output;
t_b = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_End_Vy * t_1 * pw_idx_0;
t_c = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_End_Vy * t_1 * pw_idx_0;
t_d = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))>;
t_e = rtb_End_Vy * rtb_Output;
t_f = t_1 * pw_idx * pw_idx_0 + rtb_End_Vy * q3_idx;
t_g = q3_idx * pw_idx - rtb_End_Vy * t_1 * pw_idx_0;
t_h = rtb_End_Vy * t_1 - q3_idx * pw_idx * pw_idx_0;
t_i = (-t_1) * pw_idx - rtb_End_Vy * q3_idx * pw_idx_0;
b_x[0] = ((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * rtb_End_Vy * rtb_Output * t + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 1))> * rtb_End_Vy * rtb_Output) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * rtb_End_Vy * rtb_Output * theta_0 * t_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * rtb_End_Vy * rtb_Output * theta * t) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_End_Vy * rtb_Output * theta_0 * theta) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_End_Vy * rtb_Output * t * t_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * rtb_End_Vy * theta_0 * theta * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * rtb_Output * theta_0 * q3_idx * t_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * rtb_Output * theta * q3_idx * t) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * rtb_End_Vy * t * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_End_Vy * theta_0 * theta * q3_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_End_Vy * q3_idx * t * t_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_Output * theta_0 * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_Output * theta * t * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * theta_0 * theta * q3_idx * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * q3_idx * t * t_0 * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * theta_0 * theta * t_1 * pw_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t * t_0 * t_1 * pw_idx * pw_idx_0;
b_x[1] = ((((((((((((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 1))> * q3_idx * pw_idx - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 1))> * rtb_End_Vy * t_1 * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * q3_idx * t * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * theta_0 * t_0 * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * theta * t * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * rtb_End_Vy * t * t_1 * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * theta_0 * q3_idx * t_0 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * theta * q3_idx * t * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * theta_0 * theta * q3_idx * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_End_Vy * theta_0 * theta * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * q3_idx * t * t_0 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_Output * theta_0 * q3_idx * t_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_Output * theta * q3_idx * t) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_End_Vy * t * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_End_Vy * theta_0 * theta * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_Output * theta_0 * q3_idx * t_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_Output * theta * q3_idx * t) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_End_Vy * t * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_Output * theta_0 * theta * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_Output * t * t_0 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * rtb_End_Vy * theta_0 * t_0 * t_1 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * rtb_End_Vy * theta * t * t_1 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_End_Vy * theta_0 * theta * t_1 * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_End_Vy * t * t_0 * t_1 * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * theta_0 * theta * q3_idx * pw_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * q3_idx * t * t_0 * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * theta_0 * theta * q3_idx * pw_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * q3_idx * t * t_0 * pw_idx * pw_idx_0;
b_x[2] = (((((((((((((((((((((((((((-%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 1))>) * t_1 * pw_idx - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 1))> * rtb_End_Vy * q3_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * t * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * theta_0 * t_0 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * theta * t * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * rtb_End_Vy * q3_idx * t * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * theta_0 * t_0 * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * theta * t * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_End_Vy * theta_0 * theta * q3_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * theta_0 * theta * t_1 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_End_Vy * q3_idx * t * t_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * t * t_0 * t_1 * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_Output * theta_0 * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_Output * theta * t * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_End_Vy * theta_0 * theta * q3_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_End_Vy * q3_idx * t * t_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_Output * theta_0 * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_Output * theta * t * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * rtb_Output * theta_0 * theta * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * rtb_Output * t * t_0 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * rtb_End_Vy * theta_0 * q3_idx * t_0 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 3))> * rtb_End_Vy * theta * q3_idx * t * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_End_Vy * theta_0 * theta * q3_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_End_Vy * q3_idx * t * t_0 * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * theta_0 * theta * t_1 * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t * t_0 * t_1 * pw_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * theta_0 * theta * t_1 * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t * t_0 * t_1 * pw_idx * pw_idx_0;
b_x[3] = (rtb_Output * theta * pw_idx + t_0 * pw_idx_0) * (-theta_0) - (theta * pw_idx_0 - rtb_Output * t_0 * pw_idx) * t;
b_x[4] = (theta * t_f - rtb_Output * t_0 * t_1) * theta_0 - (rtb_Output * theta * t_1 + t_0 * t_f) * t;
b_x[5] = (rtb_Output * q3_idx * t_0 + theta * t_h) * (-theta_0) + (t_0 * t_h - rtb_Output * theta * q3_idx) * t;
b_x[6] = ((((((t_2 + t_3) + t_4) + t_5) + t_6) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * theta * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * rtb_Output * t_0 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_End_Vy * t_1 * pw_idx_0;
b_x[7] = (((((((((t_7 - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_End_Vy * q3_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_End_Vy * rtb_Output) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * rtb_End_Vy * q3_idx * t_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * rtb_Output * theta * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_End_Vy * q3_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * t_1 * pw_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_End_Vy * q3_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * t_0 * t_1 * pw_idx * pw_idx_0;
b_x[8] = (((((((((t_8 + t_9) + t_a) + t_b) + t_c) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * q3_idx * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * q3_idx * pw_idx) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * rtb_Output * theta * q3_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * rtb_End_Vy * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * q3_idx * pw_idx * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 2))> * q3_idx * t_0 * pw_idx * pw_idx_0;
b_x[9] = t_e;
b_x[10] = t_g;
b_x[11] = t_i;
b_x[12] = ((((t_2 + t_3) + t_4) + t_5) + t_6) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_End_Vy * t_1 * pw_idx_0;
b_x[13] = ((((((t_7 - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * rtb_End_Vy * q3_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * t_1 * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * rtb_End_Vy * rtb_Output) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_End_Vy * q3_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * t_1 * pw_idx * pw_idx_0) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_End_Vy * q3_idx * pw_idx_0;
b_x[14] = ((((((t_8 + t_9) + t_a) + t_b) + t_c) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * q3_idx * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * q3_idx * pw_idx) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 4))> * q3_idx * pw_idx * pw_idx_0;
b_x[15] = t_e;
b_x[16] = t_g;
b_x[17] = t_i;
b_x[18] = (%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * q3_idx - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * t_1) * (-rtb_Output);
b_x[19] = (%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_Output * q3_idx + (-%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))>) * pw_idx_0) + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_Output * q3_idx;
b_x[20] = (%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * pw_idx_0 - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 5))> * rtb_Output * t_1) - %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 6))> * rtb_Output * t_1;
b_x[21] = pw_idx_0;
b_x[22] = rtb_Output * t_1;
b_x[23] = rtb_Output * q3_idx;
b_x[24] = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))> * t_1 + %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))> * q3_idx;
b_x[25] = (-t_1) * t_d;
b_x[26] = (-q3_idx) * t_d;
b_x[27] = 0.0;
b_x[28] = q3_idx;
b_x[29] = -t_1;
b_x[30] = 0.0;
b_x[31] = -%<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 8))>;
b_x[32] = %<SLibCG_SE(SLibCGIR_PV(24, 0, 12, 9, "", -1, "", 7))>;
b_x[33] = 1.0;
b_x[34] = 0.0;
b_x[35] = 0.0;
memcpy((void *)&Jb[0], (void *)&b_x[0], 36U * sizeof(real_T));
for(i = 0; i < 3; i++) {
RT[3 * i] = g[i];
RT[1 + 3 * i] = g[i + 4];
RT[2 + 3 * i] = g[i + 8];
}
/* wh = diag(sym('wh',[1,3])); */
memset((void *)&wh[0], 0, 9U * sizeof(real_T));
wh[0] = 0.0;
wh[4] = 0.0;
wh[8] = 0.0;
wh[3] = -g[14];
wh[6] = g[13];
wh[1] = g[14];
wh[7] = -g[12];
wh[2] = -g[13];
wh[5] = g[12];
/* Adg_inv(4:6,4:6) = RT; */
for(i = 0; i < 3; i++) {
RT_0[3 * i] = -RT[3 * i];
RT_0[1 + 3 * i] = -RT[3 * i + 1];
RT_0[2 + 3 * i] = -RT[3 * i + 2];
}
for(i = 0; i < 3; i++) {
for(t_j = 0; t_j < 3; t_j++) {
RT_1[i + 3 * t_j] = 0.0;
RT_1[i + 3 * t_j] = RT_1[3 * t_j + i] + wh[3 * t_j] * RT_0[i];
RT_1[i + 3 * t_j] = wh[3 * t_j + 1] * RT_0[i + 3] + RT_1[3 * t_j + i];
RT_1[i + 3 * t_j] = wh[3 * t_j + 2] * RT_0[i + 6] + RT_1[3 * t_j + i];
}
}
for(i = 0; i < 3; i++) {
b[6 * i] = RT[3 * i];
b[1 + 6 * i] = RT[3 * i + 1];
b[2 + 6 * i] = RT[3 * i + 2];
}
for(i = 0; i < 3; i++) {
b[6 * (i + 3)] = RT_1[3 * i];
b[1 + 6 * (i + 3)] = RT_1[3 * i + 1];
b[2 + 6 * (i + 3)] = RT_1[3 * i + 2];
}
for(i = 0; i < 3; i++) {
b[3 + 6 * i] = 0.0;
b[4 + 6 * i] = 0.0;
b[5 + 6 * i] = 0.0;
}
for(i = 0; i < 3; i++) {
b[3 + 6 * (i + 3)] = RT[3 * i];
b[4 + 6 * (i + 3)] = RT[3 * i + 1];
b[5 + 6 * (i + 3)] = RT[3 * i + 2];
}
%<SLibCGCallSubFcn(block, 3, 11, 6)>;
kx_5[0] = %<SLibCG_SE(SLibCG_BOV(83, 0, 12, 3, "", -1, "", 0))>;
kx_5[1] = %<SLibCG_SE(SLibCG_BOV(83, 0, 12, 3, "", -1, "", 1))>;
kx_5[2] = %<SLibCG_SE(SLibCG_BOV(83, 0, 12, 3, "", -1, "", 2))>;
kx_5[3] = 0.0;
kx_5[4] = 0.0;
kx_5[5] = 0.0;
for(i = 0; i < 6; i++) {
kx_4[i] = 0.0;
for(t_j = 0; t_j < 6; t_j++) {
kx_4[i] = b[6 * t_j + i] * kx_5[t_j] + kx_4[i];
}
%<SLibCG_SetBOV(84, 0, 12, 6, "", -1, "i", 0, "kx_4[i]")>\
}

%<tlcOutputsFcnOfS12B31>\
if(%<LibIsSampleHit(1)>) {

%<SLibCG_SetBOV(40, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(92, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCGIR_PV(91, 0, 12, 3, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(40, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(92, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCGIR_PV(91, 0, 12, 3, "", -1, "", 1))>")>\
%<SLibCG_SetBOV(40, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(92, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCGIR_PV(91, 0, 12, 3, "", -1, "", 2))>")>\
}
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[3], "Output",0)

EulerAugPDJoint_Synthesized_Atomic_Subsystem_For_Alg_Loop_1();

%endif
%<SLibCG_SetBOV(41, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(93, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(86, 0, 12, 6, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(41, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(93, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(84, 0, 12, 6, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(41, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(93, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(39, 0, 12, 6, "", -1, "", 0))>")>\

%<SLibCG_SetBOV(42, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCG_BOV(41, 0, 12, 3, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(19, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(42, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCG_BOV(41, 0, 12, 3, "", -1, "", 1))> - %<SLibCG_SE(SLibCG_BOV(20, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(42, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCG_BOV(41, 0, 12, 3, "", -1, "", 2))> - %<SLibCG_SE(SLibCG_BOV(92, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B34>\

%<tlcOutputsFcnOfS12B35>\

%<tlcOutputsFcnOfS12B36>\

%<SLibCG_SetBOV(43, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(94, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(86, 0, 12, 6, "", -1, "", 1))>")>\
%<SLibCG_SetBOV(43, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(94, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(84, 0, 12, 6, "", -1, "", 1))>")>\
%<SLibCG_SetBOV(43, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(94, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(39, 0, 12, 6, "", -1, "", 1))>")>\

%<SLibCG_SetBOV(44, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCG_BOV(43, 0, 12, 3, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(24, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(44, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCG_BOV(43, 0, 12, 3, "", -1, "", 1))> - %<SLibCG_SE(SLibCG_BOV(25, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(44, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCG_BOV(43, 0, 12, 3, "", -1, "", 2))> - %<SLibCG_SE(SLibCG_BOV(93, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B38>\

%<SLibCG_SetBOV(45, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(95, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(86, 0, 12, 6, "", -1, "", 2))>")>\
%<SLibCG_SetBOV(45, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(95, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(84, 0, 12, 6, "", -1, "", 2))>")>\
%<SLibCG_SetBOV(45, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(95, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(39, 0, 12, 6, "", -1, "", 2))>")>\

%<SLibCG_SetBOV(46, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCG_BOV(45, 0, 12, 3, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(26, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(46, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCG_BOV(45, 0, 12, 3, "", -1, "", 1))> - %<SLibCG_SE(SLibCG_BOV(27, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(46, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCG_BOV(45, 0, 12, 3, "", -1, "", 2))> - %<SLibCG_SE(SLibCG_BOV(94, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B39>\

%<tlcOutputsFcnOfS12B40>\

%<tlcOutputsFcnOfS12B41>\

%<tlcOutputsFcnOfS12B43>\

%<tlcOutputsFcnOfS12B44>\

%<tlcOutputsFcnOfS12B45>\

%<tlcOutputsFcnOfS12B46>\

%<tlcOutputsFcnOfS12B47>\

%<tlcOutputsFcnOfS12B48>\

%<SLibCG_SetBOV(47, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(96, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(86, 0, 12, 6, "", -1, "", 3))>")>\
%<SLibCG_SetBOV(47, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(96, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(84, 0, 12, 6, "", -1, "", 3))>")>\
%<SLibCG_SetBOV(47, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(96, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(39, 0, 12, 6, "", -1, "", 3))>")>\

%<SLibCG_SetBOV(48, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCG_BOV(47, 0, 12, 3, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(28, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(48, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCG_BOV(47, 0, 12, 3, "", -1, "", 1))> - %<SLibCG_SE(SLibCG_BOV(29, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(48, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCG_BOV(47, 0, 12, 3, "", -1, "", 2))> - %<SLibCG_SE(SLibCG_BOV(95, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B49>\

%<tlcOutputsFcnOfS12B50>\

%<tlcOutputsFcnOfS12B51>\

%<SLibCG_SetBOV(49, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(97, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(86, 0, 12, 6, "", -1, "", 4))>")>\
%<SLibCG_SetBOV(49, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(97, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(84, 0, 12, 6, "", -1, "", 4))>")>\
%<SLibCG_SetBOV(49, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(97, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(39, 0, 12, 6, "", -1, "", 4))>")>\

%<SLibCG_SetBOV(50, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCG_BOV(49, 0, 12, 3, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(30, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(50, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCG_BOV(49, 0, 12, 3, "", -1, "", 1))> - %<SLibCG_SE(SLibCG_BOV(31, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(50, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCG_BOV(49, 0, 12, 3, "", -1, "", 2))> - %<SLibCG_SE(SLibCG_BOV(96, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B52>\

%<tlcOutputsFcnOfS12B53>\

%<tlcOutputsFcnOfS12B54>\

%<SLibCG_SetBOV(51, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(98, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(86, 0, 12, 6, "", -1, "", 5))>")>\
%<SLibCG_SetBOV(51, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(98, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(84, 0, 12, 6, "", -1, "", 5))>")>\
%<SLibCG_SetBOV(51, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(98, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(39, 0, 12, 6, "", -1, "", 5))>")>\

%<SLibCG_SetBOV(52, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCG_BOV(51, 0, 12, 3, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(32, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(52, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCG_BOV(51, 0, 12, 3, "", -1, "", 1))> - %<SLibCG_SE(SLibCG_BOV(33, 0, 12, 1, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(52, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCG_BOV(51, 0, 12, 3, "", -1, "", 2))> - %<SLibCG_SE(SLibCG_BOV(97, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B55>\

%<tlcOutputsFcnOfS12B56>\

%<tlcOutputsFcnOfS12B57>\

%<SLibCG_SetBOV(53, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(99, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(90, 0, 12, 9, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(53, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(99, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(90, 0, 12, 9, "", -1, "", 1))>")>\
%<SLibCG_SetBOV(53, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(99, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(90, 0, 12, 9, "", -1, "", 2))>")>\

%<tlcOutputsFcnOfS12B58>\

%<SLibCG_SetBOV(54, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(100, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(54, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(100, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 1))>")>\
%<SLibCG_SetBOV(54, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(100, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 2))>")>\

%<tlcOutputsFcnOfS12B59>\

%<SLibCG_SetBOV(55, 0, 12, 3, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(101, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 3))>")>\
%<SLibCG_SetBOV(55, 0, 12, 3, "", -1, "", 1, "%<SLibCG_SE(SLibCGIR_PV(101, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 4))>")>\
%<SLibCG_SetBOV(55, 0, 12, 3, "", -1, "", 2, "%<SLibCG_SE(SLibCGIR_PV(101, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(SLibCG_BOV(16, 0, 12, 18, "", -1, "", 5))>")>\

%<tlcOutputsFcnOfS12B61>\

%<tlcOutputsFcnOfS12B62>\

%<tlcOutputsFcnOfS12B63>\

%<tlcOutputsFcnOfS12B64>\

%<SLibCG_SetBOV(59, 0, 12, 9, "", -1, "", 0, "%<SLibCG_SE(SLibCG_BOV(21, 0, 12, 1, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(54, 0, 12, 3, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(59, 0, 12, 9, "", -1, "", 1, "%<SLibCG_SE(SLibCG_BOV(22, 0, 12, 1, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(54, 0, 12, 3, "", -1, "", 1))>")>\
%<SLibCG_SetBOV(59, 0, 12, 9, "", -1, "", 2, "%<SLibCG_SE(SLibCG_BOV(23, 0, 12, 1, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(54, 0, 12, 3, "", -1, "", 2))>")>\
%<SLibCG_SetBOV(59, 0, 12, 9, "", -1, "", 3, "%<SLibCG_SE(SLibCG_BOV(34, 0, 12, 1, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(55, 0, 12, 3, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(59, 0, 12, 9, "", -1, "", 4, "%<SLibCG_SE(SLibCG_BOV(37, 0, 12, 1, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(55, 0, 12, 3, "", -1, "", 1))>")>\
%<SLibCG_SetBOV(59, 0, 12, 9, "", -1, "", 5, "%<SLibCG_SE(SLibCG_BOV(38, 0, 12, 1, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(55, 0, 12, 3, "", -1, "", 2))>")>\
%<SLibCG_SetBOV(59, 0, 12, 9, "", -1, "", 6, "%<SLibCG_SE(SLibCG_BOV(56, 0, 12, 1, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(53, 0, 12, 3, "", -1, "", 0))>")>\
%<SLibCG_SetBOV(59, 0, 12, 9, "", -1, "", 7, "%<SLibCG_SE(SLibCG_BOV(57, 0, 12, 1, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(53, 0, 12, 3, "", -1, "", 1))>")>\
%<SLibCG_SetBOV(59, 0, 12, 9, "", -1, "", 8, "%<SLibCG_SE(SLibCG_BOV(58, 0, 12, 1, "", -1, "", 0))> - %<SLibCG_SE(SLibCG_BOV(53, 0, 12, 3, "", -1, "", 2))>")>\

%<tlcOutputsFcnOfS12B65>\

%<tlcOutputsFcnOfS12B66>\

%<tlcOutputsFcnOfS12B67>\

%<tlcOutputsFcnOfS12B68>\

%<tlcOutputsFcnOfS12B69>\

%<tlcOutputsFcnOfS12B71>\

%<tlcOutputsFcnOfS12B72>\

%<tlcOutputsFcnOfS12B73>\

rtb_Clock = muDoubleScalarSin(%<SLibCG_SE(SLibCGIR_PV(105, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(LibGetTaskTime(0))> + %<SLibCG_SE(SLibCGIR_PV(106, 0, 12, 1, "", -1, "", 0))>) * %<SLibCG_SE(SLibCGIR_PV(103, 0, 12, 1, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(104, 0, 12, 1, "", -1, "", 0))>;

%<SLibCG_SetBOV(60, 0, 12, 1, "", -1, "", 0, "rtb_Clock + %<SLibCG_SE(SLibCGIR_PV(102, 0, 12, 1, "", -1, "", 0))>")>\

%<SLibCG_SetBOV(61, 0, 12, 1, "", -1, "", 0, "muDoubleScalarSin(%<SLibCG_SE(SLibCGIR_PV(109, 0, 12, 1, "", -1, "", 0))> * %<SLibCG_SE(LibGetTaskTime(0))> + %<SLibCG_SE(SLibCGIR_PV(110, 0, 12, 1, "", -1, "", 0))>) * %<SLibCG_SE(SLibCGIR_PV(107, 0, 12, 1, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(108, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B75>\

%<tlcOutputsFcnOfS12B76>\

%<tlcOutputsFcnOfS12B77>\

%<tlcOutputsFcnOfS12B91>\

if(%<LibIsSampleHit(1)>) {

if(%<LibIsMajorTimeStep()>) {
%<SLibCG_SetDWV(62, 0, 12, 1, "", -1, "", 0, "(%<SLibCG_SE(LibGetTaskTime(1))> >= %<SLibCG_SE(SLibCGIR_PV(111, 0, 12, 1, "", -1, "", 0))>)")>\
}

if(%<LibIsMajorTimeStep()>) {
%<SLibCG_SetDWV(63, 0, 12, 1, "", -1, "", 0, "(%<SLibCG_SE(LibGetTaskTime(1))> >= %<SLibCG_SE(SLibCGIR_PV(114, 0, 12, 1, "", -1, "", 0))>)")>\
}

if(%<SLibCG_SE(SLibCG_DWV(62, 0, 12, 1, "", -1, "", 0))> == 1) {
pw_idx = %<SLibCG_SE(SLibCGIR_PV(113, 0, 12, 1, "", -1, "", 0))>;
} else {
pw_idx = %<SLibCG_SE(SLibCGIR_PV(112, 0, 12, 1, "", -1, "", 0))>;
}
if(%<SLibCG_SE(SLibCG_DWV(63, 0, 12, 1, "", -1, "", 0))> == 1) {
q3_idx = %<SLibCG_SE(SLibCGIR_PV(116, 0, 12, 1, "", -1, "", 0))>;
} else {
q3_idx = %<SLibCG_SE(SLibCGIR_PV(115, 0, 12, 1, "", -1, "", 0))>;
}
%<SLibCG_SetBOV(63, 0, 12, 1, "", -1, "", 0, "pw_idx + q3_idx")>\
}

%<tlcOutputsFcnOfS12B115>\

rtb_Sum_h = %<SLibCG_SE(SLibCG_BOV(63, 0, 12, 1, "", -1, "", 0))> * rtb_Clock;
if(%<LibIsSampleHit(1)>) {

if(%<LibIsMajorTimeStep()>) {
%<SLibCG_SetDWV(64, 0, 12, 1, "", -1, "", 0, "(%<SLibCG_SE(LibGetTaskTime(1))> >= %<SLibCG_SE(SLibCGIR_PV(118, 0, 12, 1, "", -1, "", 0))>)")>\
}
if(%<SLibCG_SE(SLibCG_DWV(64, 0, 12, 1, "", -1, "", 0))> == 1) {
%<SLibCG_SetBOV(64, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(120, 0, 12, 1, "", -1, "", 0)>")>\
} else {
%<SLibCG_SetBOV(64, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(119, 0, 12, 1, "", -1, "", 0)>")>\
}
}

rtb_Sum_h += %<SLibCG_SE(SLibCG_BOV(64, 0, 12, 1, "", -1, "", 0))>;

%<SLibCG_SetBOV(65, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(121, 0, 12, 1, "", -1, "", 0))> * rtb_Sum_h")>\

%<SLibCG_SetBOV(66, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(122, 0, 12, 1, "", -1, "", 0))> * rtb_Sum_h")>\

%<SLibCG_SetBOV(67, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(123, 0, 12, 1, "", -1, "", 0))> * rtb_Sum_h")>\

%<SLibCG_SetBOV(68, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(124, 0, 12, 1, "", -1, "", 0))> * rtb_Sum_h")>\

%<SLibCG_SetBOV(69, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(125, 0, 12, 1, "", -1, "", 0))> * rtb_Sum_h")>\

%<SLibCG_SetBOV(70, 0, 12, 1, "", -1, "", 0, "%<SLibCG_SE(SLibCGIR_PV(126, 0, 12, 1, "", -1, "", 0))> * rtb_Sum_h")>\

%<tlcOutputsFcnOfS12B116>\
if(%<LibIsSampleHit(1)>) {

if(%<LibIsMajorTimeStep()>) {
%<SLibCG_SetDWV(65, 0, 12, 1, "", -1, "", 0, "(%<SLibCG_SE(LibGetTaskTime(1))> >= %<SLibCG_SE(SLibCGIR_PV(129, 0, 12, 1, "", -1, "", 0))>)")>\
}
if(%<SLibCG_SE(SLibCG_DWV(65, 0, 12, 1, "", -1, "", 0))> == 1) {
%<SLibCG_SetBOV(71, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(131, 0, 12, 1, "", -1, "", 0)>")>\
} else {
%<SLibCG_SetBOV(71, 0, 12, 1, "", -1, "", 0, "%<SLibCGIR_PV(130, 0, 12, 1, "", -1, "", 0)>")>\
}
}

%<SLibCG_SetBOV(72, 0, 12, 1, "", -1, "", 0, "(rtb_Clock - %<SLibCG_SE(SLibCGIR_PV(127, 0, 12, 1, "", -1, "", 0))>) * %<SLibCG_SE(SLibCG_BOV(71, 0, 12, 1, "", -1, "", 0))> + %<SLibCG_SE(SLibCGIR_PV(128, 0, 12, 1, "", -1, "", 0))>")>\

%<tlcOutputsFcnOfS12B119>\

%<tlcOutputsFcnOfS12B120>\

%<tlcOutputsFcnOfS12B121>\

%<tlcOutputsFcnOfS12B122>\

%<tlcOutputsFcnOfS12B123>\

%<tlcOutputsFcnOfS12B124>\

%<SLibCGIRGenReusableSysCallNoCGIRArgs(4, 1, 3, 0, 3, 12)>\

%<SLibCGIRGenReusableSysCallNoCGIRArgs(5, 1, 3, 0, 3, 12)>\
%endfunction
