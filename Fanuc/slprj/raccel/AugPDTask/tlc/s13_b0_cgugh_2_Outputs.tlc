%implements s13_b0_cgugh_2_Outputs "C"

%function Outputs(block, system) Output

%assign localVarDecl = ""
%openfile localVarDecl
real_T g[16];
real_T Jb[36];
real_T t;
real_T t_0;
real_T t_1;
real_T t_2;
real_T t_3;
real_T t_4;
real_T t_5;
real_T t_6;
real_T t_7;
real_T t_8;
real_T t_9;
real_T t_a;
real_T t_b;
real_T t_c;
real_T t_d;
real_T t_e;
real_T t_f;
real_T t_g;
real_T t_h;
real_T t_i;
real_T t_j;
real_T t_k;
real_T t_l;
real_T t_m;
real_T x[16];
real_T t_n;
real_T t_o;
real_T t_p;
real_T b_x[36];
real_T RT[9];
real_T wh[9];
real_T b[36];
int32_T i;
real_T RT_0[9];
real_T RT_1[9];
real_T tmp[6];
real_T b_0[6];
int32_T i_0;

%closefile localVarDecl
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>

%<SLibCG_SetBOV(96, 0, 8, 3, "", -1, "", 0, "%<SLibCGIR_IArg(0, 0, 8, 1, "", -1, "", 0)>")>\
%<SLibCG_SetBOV(96, 0, 8, 3, "", -1, "", 1, "%<SLibCGIR_IArg(1, 0, 8, 1, "", -1, "", 0)>")>\
%<SLibCG_SetBOV(96, 0, 8, 3, "", -1, "", 2, "%<SLibCGIR_IArg(2, 0, 8, 1, "", -1, "", 0)>")>\

/* FWD_KIN */
/*     GST = FWD_KIN(IN1,IN2) */
/*     This function was generated by the Symbolic Math Toolbox version 5.5. */
/*     24-Apr-2013 12:49:18 */
t = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 0)>);
t_0 = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 1)>);
t_1 = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 2)>);
t_2 = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 2)>);
t_3 = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 1)>);
t_4 = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 3)>);
t_5 = t * t_0 * t_1 + t * t_2 * t_3;
t_6 = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 3)>);
t_7 = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 0)>);
t_8 = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 4)>);
t_9 = t * t_0 * t_2 - t * t_1 * t_3;
t_a = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 4)>);
t_b = t_5 * t_6 + t_7 * t_4;
t_c = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 5)>);
t_d = t_6 * t_7;
t_e = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 5)>);
t_f = t_8 * t_9 + t_a * t_b;
t_g = t_7 * t_0 * t_2 - t_7 * t_1 * t_3;
t_h = t_7 * t_0 * t_1 + t_7 * t_2 * t_3;
t_i = t_6 * t_h - t * t_4;
t_j = t_8 * t_g + t_a * t_i;
t_h = t_h * t_4 + t_6 * t;
t_k = t_0 * t_1 + t_2 * t_3;
t_l = t_0 * t_2 - t_1 * t_3;
t_m = t_8 * t_k - t_6 * t_a * t_l;
x[0] = t_9 * t_a - t_8 * t_b;
x[1] = t_a * t_g - t_8 * t_i;
x[2] = (-t_a) * t_k - t_6 * t_8 * t_l;
x[3] = 0.0;
x[4] = t_c * t_f - (t_d - t_5 * t_4) * t_e;
x[5] = t_c * t_j + t_e * t_h;
x[6] = t_e * t_l * t_4 + (-t_c) * t_m;
x[7] = 0.0;
x[8] = (t_d - t_5 * t_4) * t_c + t_e * t_f;
x[9] = t_e * t_j - t_c * t_h;
x[10] = (-t_e) * t_m - t_c * t_l * t_4;
x[11] = 0.0;
x[12] = ((((((((((((((((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t * t_3 + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 1))> * t) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_6 * t_7 * t_e) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_6 * t_7 * t_c) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_7 * t_8 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_7 * t_8 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t * t_1 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_a * t * t_0 * t_2) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_a * t * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_a * t * t_1 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_7 * t_a * t_c * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_a * t * t_1 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_7 * t_a * t_e * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_6 * t_8 * t * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_6 * t_8 * t * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_8 * t * t_c * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_6 * t_8 * t * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_6 * t_8 * t * t_2 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_8 * t * t_e * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_8 * t * t_c * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_8 * t * t_e * t_1 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t * t_e * t_0 * t_1 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t * t_c * t_0 * t_1 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t * t_e * t_2 * t_3 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t * t_c * t_2 * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_6 * t_a * t * t_c * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_6 * t_a * t * t_e * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_6 * t_a * t * t_c * t_2 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_6 * t_a * t * t_e * t_2 * t_3;
x[13] = ((((((((((((((((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_7 * t_3 + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 1))> * t_7) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_7 * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_6 * t * t_e) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_7 * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_6 * t * t_c) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_7 * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_7 * t_1 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_8 * t * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_8 * t * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_7 * t_a * t_0 * t_2) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_7 * t_a * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_7 * t_a * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_7 * t_a * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_a * t * t_c * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_a * t * t_e * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_6 * t_7 * t_8 * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_6 * t_7 * t_8 * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_7 * t_8 * t_c * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_6 * t_7 * t_8 * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_6 * t_7 * t_8 * t_2 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_7 * t_8 * t_e * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_7 * t_8 * t_c * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_7 * t_8 * t_e * t_1 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_7 * t_e * t_0 * t_1 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_7 * t_c * t_0 * t_1 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_7 * t_e * t_2 * t_3 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_7 * t_c * t_2 * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_6 * t_7 * t_a * t_c * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_6 * t_7 * t_a * t_e * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_6 * t_7 * t_a * t_c * t_2 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_6 * t_7 * t_a * t_e * t_2 * t_3;
x[14] = ((((((((((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_0 + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 0))>) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_a * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_a * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_a * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_a * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_6 * t_8 * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_6 * t_8 * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_8 * t_c * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_6 * t_8 * t_1 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_6 * t_8 * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_8 * t_e * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_8 * t_c * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_8 * t_e * t_2 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_e * t_0 * t_2 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_c * t_0 * t_2 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_e * t_1 * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_c * t_1 * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_6 * t_a * t_c * t_0 * t_2) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_6 * t_a * t_e * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_6 * t_a * t_c * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_6 * t_a * t_e * t_1 * t_3;
x[15] = 1.0;
memcpy((void *)&g[0], (void *)&x[0], sizeof(real_T) << 4U);
/* BODY_JACOBIAN */
/*     BODY_JACOBIAN = BODY_JACOBIAN(IN1,IN2) */
/*     This function was generated by the Symbolic Math Toolbox version 5.5. */
/*     24-Apr-2013 20:43:25 */
t_h = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 3)>);
t_k = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 4)>);
t_l = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 1)>);
t_m = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 2)>);
t = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 5)>);
t_0 = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 1)>);
t_1 = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 2)>);
t_2 = muDoubleScalarSin(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 5)>);
t_3 = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 3)>);
t_4 = muDoubleScalarCos(%<SLibCGIR_IArg(3, 0, 8, 6, "", -1, "", 4)>);
t_5 = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_4;
t_6 = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_k * t_3;
t_7 = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_2 * t_3;
t_8 = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t * t_3;
t_9 = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_h * t * t_4;
t_a = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_k * t_2;
t_b = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_k * t;
t_c = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_h * t_2;
t_d = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_h * t_k;
t_e = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_h * t_2 * t_4;
t_f = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_h * t_2 * t_4;
t_g = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))>;
t_i = t_h * t_k;
t_j = t_2 * t_3 * t_4 + t_h * t;
t_n = t * t_3 - t_h * t_2 * t_4;
t_o = t_h * t_2 - t * t_3 * t_4;
t_p = (-t_2) * t_3 - t_h * t * t_4;
b_x[0] = ((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_h * t_k * t_0 + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 1))> * t_h * t_k) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_h * t_k * t_l * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_h * t_k * t_m * t_0) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_h * t_k * t_l * t_m) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_h * t_k * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_h * t_l * t_m * t_2) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_k * t_l * t * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_k * t_m * t * t_0) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_h * t_0 * t_1 * t_2) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_h * t_l * t_m * t) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_h * t * t_0 * t_1) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_k * t_l * t_1 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_k * t_m * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_l * t_m * t * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t * t_0 * t_1 * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_l * t_m * t_2 * t_3 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_0 * t_1 * t_2 * t_3 * t_4;
b_x[1] = ((((((((((((((((((((((((((%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 1))> * t * t_3 - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 1))> * t_h * t_2 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t * t_0 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_l * t_1 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_m * t_0 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_h * t_0 * t_2 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_l * t * t_1 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_m * t * t_0 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_l * t_m * t * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_h * t_l * t_m * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t * t_0 * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_k * t_l * t * t_1) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_k * t_m * t * t_0) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_h * t_0 * t_1 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_h * t_l * t_m * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_k * t_l * t * t_1) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_k * t_m * t * t_0) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_h * t_0 * t_1 * t_2) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_k * t_l * t_m * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_k * t_0 * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_h * t_l * t_1 * t_2 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_h * t_m * t_0 * t_2 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_h * t_l * t_m * t_2 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_h * t_0 * t_1 * t_2 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_l * t_m * t * t_3 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t * t_0 * t_1 * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_l * t_m * t * t_3 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t * t_0 * t_1 * t_3 * t_4;
b_x[2] = (((((((((((((((((((((((((((-%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 1))>) * t_2 * t_3 - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 1))> * t_h * t * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_0 * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_l * t_1 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_m * t_0 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_h * t * t_0 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_l * t_1 * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_m * t_0 * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_h * t_l * t_m * t) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_l * t_m * t_2 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_h * t * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_0 * t_1 * t_2 * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_k * t_l * t_1 * t_2) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_k * t_m * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_h * t_l * t_m * t) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_h * t * t_0 * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_k * t_l * t_1 * t_2) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_k * t_m * t_0 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_k * t_l * t_m * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_k * t_0 * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_h * t_l * t * t_1 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 3))> * t_h * t_m * t * t_0 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_h * t_l * t_m * t * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_h * t * t_0 * t_1 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_l * t_m * t_2 * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_0 * t_1 * t_2 * t_3 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_l * t_m * t_2 * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_0 * t_1 * t_2 * t_3 * t_4;
b_x[3] = (t_k * t_m * t_3 + t_1 * t_4) * (-t_l) - (t_m * t_4 - t_k * t_1 * t_3) * t_0;
b_x[4] = (t_m * t_j - t_k * t_1 * t_2) * t_l - (t_k * t_m * t_2 + t_1 * t_j) * t_0;
b_x[5] = (t_k * t * t_1 + t_m * t_o) * (-t_l) + (t_1 * t_o - t_k * t_m * t) * t_0;
b_x[6] = ((((((t_5 + t_6) + t_7) + t_8) + t_9) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_m * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_k * t_1 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_h * t_2 * t_4;
b_x[7] = (((((((((t_a - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_h * t) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_h * t_k) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_h * t * t_1) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_k * t_m * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_h * t * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_2 * t_3 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_h * t * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_1 * t_2 * t_3 * t_4;
b_x[8] = (((((((((t_b + t_c) + t_d) + t_e) + t_f) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t * t_3) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_k * t_m * t) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t_h * t_1 * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t * t_3 * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 2))> * t * t_1 * t_3 * t_4;
b_x[9] = t_i;
b_x[10] = t_n;
b_x[11] = t_p;
b_x[12] = ((((t_5 + t_6) + t_7) + t_8) + t_9) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_h * t_2 * t_4;
b_x[13] = ((((((t_a - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_h * t) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_2 * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_h * t_k) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_h * t * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t_2 * t_3 * t_4) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_h * t * t_4;
b_x[14] = ((((((t_b + t_c) + t_d) + t_e) + t_f) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t * t_3) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 4))> * t * t_3 * t_4;
b_x[15] = t_i;
b_x[16] = t_n;
b_x[17] = t_p;
b_x[18] = (%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t_2) * (-t_k);
b_x[19] = (%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_k * t + (-%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))>) * t_4) + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_k * t;
b_x[20] = (%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_4 - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 5))> * t_k * t_2) - %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 6))> * t_k * t_2;
b_x[21] = t_4;
b_x[22] = t_k * t_2;
b_x[23] = t_k * t;
b_x[24] = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))> * t_2 + %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))> * t;
b_x[25] = (-t_2) * t_g;
b_x[26] = (-t) * t_g;
b_x[27] = 0.0;
b_x[28] = t;
b_x[29] = -t_2;
b_x[30] = 0.0;
b_x[31] = -%<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 8))>;
b_x[32] = %<SLibCG_SE(SLibCGIR_PV(115, 0, 8, 9, "", -1, "", 7))>;
b_x[33] = 1.0;
b_x[34] = 0.0;
b_x[35] = 0.0;
memcpy((void *)&Jb[0], (void *)&b_x[0], 36U * sizeof(real_T));
for(i = 0; i < 3; i++) {
RT[3 * i] = g[i];
RT[1 + 3 * i] = g[i + 4];
RT[2 + 3 * i] = g[i + 8];
}
/* wh = diag(sym('wh',[1,3])); */
memset((void *)&wh[0], 0, 9U * sizeof(real_T));
wh[0] = 0.0;
wh[4] = 0.0;
wh[8] = 0.0;
wh[3] = -g[14];
wh[6] = g[13];
wh[1] = g[14];
wh[7] = -g[12];
wh[2] = -g[13];
wh[5] = g[12];
/* Adg_inv(4:6,4:6) = RT; */
for(i = 0; i < 3; i++) {
RT_0[3 * i] = -RT[3 * i];
RT_0[1 + 3 * i] = -RT[3 * i + 1];
RT_0[2 + 3 * i] = -RT[3 * i + 2];
}
for(i = 0; i < 3; i++) {
for(i_0 = 0; i_0 < 3; i_0++) {
RT_1[i + 3 * i_0] = 0.0;
RT_1[i + 3 * i_0] = RT_1[3 * i_0 + i] + wh[3 * i_0] * RT_0[i];
RT_1[i + 3 * i_0] = wh[3 * i_0 + 1] * RT_0[i + 3] + RT_1[3 * i_0 + i];
RT_1[i + 3 * i_0] = wh[3 * i_0 + 2] * RT_0[i + 6] + RT_1[3 * i_0 + i];
}
}
for(i = 0; i < 3; i++) {
b[6 * i] = RT[3 * i];
b[1 + 6 * i] = RT[3 * i + 1];
b[2 + 6 * i] = RT[3 * i + 2];
}
for(i = 0; i < 3; i++) {
b[6 * (i + 3)] = RT_1[3 * i];
b[1 + 6 * (i + 3)] = RT_1[3 * i + 1];
b[2 + 6 * (i + 3)] = RT_1[3 * i + 2];
}
for(i = 0; i < 3; i++) {
b[3 + 6 * i] = 0.0;
b[4 + 6 * i] = 0.0;
b[5 + 6 * i] = 0.0;
}
for(i = 0; i < 3; i++) {
b[3 + 6 * (i + 3)] = RT[3 * i];
b[4 + 6 * (i + 3)] = RT[3 * i + 1];
b[5 + 6 * (i + 3)] = RT[3 * i + 2];
}
%<SLibCGCallSubFcn(block, 2, 1, 0)>;
tmp[0] = %<SLibCG_SE(SLibCG_BOV(96, 0, 8, 3, "", -1, "", 0))>;
tmp[1] = %<SLibCG_SE(SLibCG_BOV(96, 0, 8, 3, "", -1, "", 1))>;
tmp[2] = %<SLibCG_SE(SLibCG_BOV(96, 0, 8, 3, "", -1, "", 2))>;
tmp[3] = 0.0;
tmp[4] = 0.0;
tmp[5] = 0.0;
for(i = 0; i < 6; i++) {
b_0[i] = 0.0;
for(i_0 = 0; i_0 < 6; i_0++) {
b_0[i] = b[6 * i_0 + i] * tmp[i_0] + b_0[i];
}
%<SLibCG_SetBOV(97, 0, 8, 6, "", -1, "i", 0, "b_0[i]")>\
}
%endfunction
